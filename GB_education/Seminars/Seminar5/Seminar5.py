# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется
# последовательность чисел a0, a1, ..., an, ..., 
# где a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# ===========================================================
def solution1():
    def fib(n):
        if n == 1:
            return 1
        elif n == 0:
            return 0
        return fib(n-1) + fib(n-2)
    print(fib(5))
# solution1()
# ===========================================================
# Задача №33. Решение в группах
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1
def solution2():
    lst = [5, 3, 5, 1, 4]
    maxx = max(lst)
    minn = min(lst)
    def to_min(lst):
        for i in range(len(lst)):
            if lst[i] == maxx:
                lst[i] = minn
        return lst
    print(lst)
    print(to_min(lst))
# solution2()
# ===========================================================
# ===========================================================
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes 
# ===========================================================
def solution3():
    n = int(input("Введите число "))
    def is_simple(n):
        for i in range(2,n):
            if n//i == 0:
                return False
        return True
    print(is_simple(n))
# solution3()
# ===========================================================
# Задача №37. Решение в группах
# 15 минут
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3
# ===========================================================
def solution4():
    N = int(input('Введите натуральное число N: '))
    x = 0
    def print_list(n):
        if n == 0:
            print(n, end =' ')
            return 0
        print(n, end =' ')
        return print_list(n-1)
    def rev_list(n):
        if n == 0:
            return print(n, end =' ')
        rev_list(n-1)
        return print(n, end =' ')
    print_list(N)
    print()
    rev_list(N)
# solution4()
def solution5():
    def revers_psl(n):
        if n == 0:
            return ""
        k = int(input())
        return revers_psl(n-1) + f"{k} "
    n = int(input("Введите число: "))
    print(revers_psl(n))
# solution5()
# ===========================================================
# Задача 26: Напишите программу, которая на вход принимает
# два числа A и B, и возводит число А в целую степень B с
# помощью рекурсии.
# A = 3; B = 5 -> 243 (3⁵)
# A = 2; B = 3 -> 8
# ===========================================================
def solution6():
    def pow_n(a, b):
        if b != 0:
            return pow_n(a, b-1)*a
        return 1    
    
    A = int(input("Введите число А: "))
    B = int(input("Введите степень В числа А: "))
    A_pow_B = pow_n(A, B)
    print(A_pow_B)
# solution6()
# ===========================================================
# Задача 28: Напишите рекурсивную функцию sum(a, b),
# возвращающую сумму двух целых неотрицательных чисел. Из
# всех арифметических операций допускаются только +1 и -1.
# Также нельзя использовать циклы.
# 2 2
# 4
# ===========================================================
def solution7():
    def sum(a, b):
        if b == 0:
            return a
        return sum(a, b-1) + 1
    a = int(input("Введите число А - "))
    b = int(input("Введите число В - "))
    print(sum(a, b))
# solution7()
# ===========================================================
# *доп. Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена и вывести его в терминал.

# *Пример:*

# - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0

# значение выражения можно записать в виде:
# 2*x^2+5=0
# (если коэффициент равен 0 - значение не пишется,
# ===========================================================
# ===========================================================
# Напишите программу, которая вычисляет количество чисел, состоящих из K цифр, для которых сумма цифр равна N , напечатать сами эти числа
def solution8():
    K = int(input('Введите количество цифр: '))
    N = int(input('Введите сумму цифр: '))
    count = 0
    
        

solution8()


def solution4():
    def find_freindly_numbers(n):
        sum = 0
        for i in range(1, n):
            if n%i == 0:
                print(i)
                sum += i
        return sum
    num = int(input('введите число: '))
    
    for i in range(1, 10000):
        j = find_freindly_numbers(i)
        if i < j <= num and i == find_freindly_numbers(j):
            print(i, j) 
